.highlight  { width: 100%; overflow: auto; background: #ffffff; }
.highlight .c { color: #999988; font-style: italic }
/* Comment */
.highlight .err { color: #a61717; background-color: #e3d2d2 }
/* Error */
.highlight .k { font-weight: bold }
/* Keyword */
.highlight .o { font-weight: bold }
/* Operator */
.highlight .cm { color: #999988; font-style: italic }
/* Comment.Multiline */
.highlight .cp { color: #999999; font-weight: bold }
/* Comment.Preproc */
.highlight .c1 { color: #999988; font-style: italic }
/* Comment.Single */
.highlight .cs { color: #999999; font-weight: bold; font-style: italic }
/* Comment.Special */
.highlight .gd { color: #000000; background-color: #ffdddd }
/* Generic.Deleted */
.highlight .gd .x { color: #000000; background-color: #ffaaaa }
/* Generic.Deleted.Specific */
.highlight .ge { font-style: italic }
/* Generic.Emph */
.highlight .gr { color: #aa0000 }
/* Generic.Error */
.highlight .gh { color: #999999 }
/* Generic.Heading */
.highlight .gi { color: #000000; background-color: #ddffdd }
/* Generic.Inserted */
.highlight .gi .x { color: #000000; background-color: #aaffaa }
/* Generic.Inserted.Specific */
.highlight .go { color: #888888 }
/* Generic.Output */
.highlight .gp { color: #555555 }
/* Generic.Prompt */
.highlight .gs { font-weight: bold }
/* Generic.Strong */
.highlight .gu { color: #aaaaaa }
/* Generic.Subheading */
.highlight .gt { color: #aa0000 }
/* Generic.Traceback */
.highlight .kc { font-weight: bold }
/* Keyword.Constant */
.highlight .kd { font-weight: bold }
/* Keyword.Declaration */
.highlight .kp { font-weight: bold }
/* Keyword.Pseudo */
.highlight .kr { font-weight: bold }
/* Keyword.Reserved */
.highlight .kt { color: #445588; font-weight: bold }
/* Keyword.Type */
.highlight .m { color: #009999 }
/* Literal.Number */
.highlight .s { color: #d14 }
/* Literal.String */
.highlight .na { color: #008080 }
/* Name.Attribute */
.highlight .nb { color: #0086B3 }
/* Name.Builtin */
.highlight .nc { color: #445588; font-weight: bold }
/* Name.Class */
.highlight .no { color: #008080 }
/* Name.Constant */
.highlight .ni { color: #800080 }
/* Name.Entity */
.highlight .ne { color: #990000; font-weight: bold }
/* Name.Exception */
.highlight .nf { color: #990000; font-weight: bold }
/* Name.Function */
.highlight .nn { color: #555555 }
/* Name.Namespace */
.highlight .nt { color: #000080 }
/* Name.Tag */
.highlight .nv { color: #008080 }
/* Name.Variable */
.highlight .ow { font-weight: bold }
/* Operator.Word */
.highlight .w { color: #bbbbbb }
/* Text.Whitespace */
.highlight .mf { color: #009999 }
/* Literal.Number.Float */
.highlight .mh { color: #009999 }
/* Literal.Number.Hex */
.highlight .mi { color: #009999 }
/* Literal.Number.Integer */
.highlight .mo { color: #009999 }
/* Literal.Number.Oct */
.highlight .sb { color: #d14 }
/* Literal.String.Backtick */
.highlight .sc { color: #d14 }
/* Literal.String.Char */
.highlight .sd { color: #d14 }
/* Literal.String.Doc */
.highlight .s2 { color: #d14 }
/* Literal.String.Double */
.highlight .se { color: #d14 }
/* Literal.String.Escape */
.highlight .sh { color: #d14 }
/* Literal.String.Heredoc */
.highlight .si { color: #d14 }
/* Literal.String.Interpol */
.highlight .sx { color: #d14 }
/* Literal.String.Other */
.highlight .sr { color: #009926 }
/* Literal.String.Regex */
.highlight .s1 { color: #d14 }
/* Literal.String.Single */
.highlight .ss { color: #990073 }
/* Literal.String.Symbol */
.highlight .bp { color: #999999 }
/* Name.Builtin.Pseudo */
.highlight .vc { color: #008080 }
/* Name.Variable.Class */
.highlight .vg { color: #008080 }
/* Name.Variable.Global */
.highlight .vi { color: #008080 }
/* Name.Variable.Instance */
.highlight .il { color: #009999 }
/* Literal.Number.Integer.Long */
/* Make line numbers unselectable: excludes line numbers from copy-paste user ops */
.highlight .lineno {-webkit-user-select: none;-moz-user-select: none; -o-user-select: none;}
.lineno::-moz-selection {background-color: transparent;}
/* Mozilla specific */
.lineno::-moz-selection {background-color: transparent;}
.lineno::selection {background-color: transparent;}
/* Other major browsers */
/* ! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com */
/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
/*
Document
========
*/
/**
Use a better box model (opinionated).
*/
*,
::before,
::after {
	box-sizing: border-box;
}
/**
Use a more readable tab size (opinionated).
*/
html {
	-moz-tab-size: 4;
	-o-tab-size: 4;
	   tab-size: 4;
}
/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/
html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}
/*
Sections
========
*/
/**
Remove the margin in all browsers.
*/
body {
	margin: 0;
}
/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/
body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}
/*
Grouping content
================
*/
/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/
hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}
/*
Text-level semantics
====================
*/
/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr[title] {
	-webkit-text-decoration: underline dotted;
	        text-decoration: underline dotted;
}
/**
Add the correct font weight in Edge and Safari.
*/
b,
strong {
	font-weight: bolder;
}
/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}
/**
Add the correct font size in all browsers.
*/
small {
	font-size: 80%;
}
/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/
sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}
sub {
	bottom: -0.25em;
}
sup {
	top: -0.5em;
}
/*
Tabular data
============
*/
/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/
table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}
/*
Forms
=====
*/
/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/
button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}
/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/
button,
select { /* 1 */
	text-transform: none;
}
/**
Correct the inability to style clickable types in iOS and Safari.
*/
button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}
/**
Remove the inner border and padding in Firefox.
*/
::-moz-focus-inner {
	border-style: none;
	padding: 0;
}
/**
Restore the focus styles unset by the previous rule.
*/
:-moz-focusring {
	outline: 1px dotted ButtonText;
}
/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/
:-moz-ui-invalid {
	box-shadow: none;
}
/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/
legend {
	padding: 0;
}
/**
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
	vertical-align: baseline;
}
/**
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}
/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}
/**
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
	-webkit-appearance: none;
}
/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/
::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}
/*
Interactive
===========
*/
/*
Add the correct display in Chrome and Safari.
*/
summary {
	display: list-item;
}
/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
button {
  background-color: transparent;
  background-image: none;
}
fieldset {
  margin: 0;
  padding: 0;
}
ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
/**
 * Tailwind custom reset styles
 */
/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */
html {
  font-family: Open Sans, sans-serif; /* 1 */
  line-height: 1.5; /* 2 */
}
/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */
body {
  font-family: inherit;
  line-height: inherit;
}
/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}
/*
 * Ensure horizontal rules are visible by default
 */
hr {
  border-top-width: 1px;
}
/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */
img {
  border-style: solid;
}
textarea {
  resize: vertical;
}
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}
input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}
button,
[role="button"] {
  cursor: pointer;
}
/**
 * Override legacy focus reset from Normalize with modern Firefox focus styles.
 *
 * This is actually an improvement over the new defaults in Firefox in our testing,
 * as it triggers the better focus styles even for links, which still use a dotted
 * outline in Firefox by default.
 */
:-moz-focusring {
	outline: auto;
}
table {
  border-collapse: collapse;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */
a {
  color: inherit;
  text-decoration: inherit;
}
/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */
button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}
/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */
pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}
/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */
img,
video {
  max-width: 100%;
  height: auto;
}
/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */
[hidden] {
  display: none;
}
*, ::before, ::after  { --tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); --tw-border-opacity: 1; border-color: rgba(229, 231, 235, var(--tw-border-opacity)); --tw-blur: var(--tw-empty,/*!*/ /*!*/); --tw-brightness: var(--tw-empty,/*!*/ /*!*/); --tw-contrast: var(--tw-empty,/*!*/ /*!*/); --tw-grayscale: var(--tw-empty,/*!*/ /*!*/); --tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/); --tw-invert: var(--tw-empty,/*!*/ /*!*/); --tw-saturate: var(--tw-empty,/*!*/ /*!*/); --tw-sepia: var(--tw-empty,/*!*/ /*!*/); --tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/); --tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }
.pointer-events-none  { pointer-events: none; }
.absolute  { position: absolute; }
.relative  { position: relative; }
.top-0  { top: 0px; }
.left-0  { left: 0px; }
.top-1  { top: 0.25rem; }
.z-10  { z-index: 10; }
.z-20  { z-index: 20; }
.z-50  { z-index: 50; }
.m-auto  { margin: auto; }
.mx-auto  { margin-left: auto; margin-right: auto; }
.mx-3  { margin-left: 0.75rem; margin-right: 0.75rem; }
.my-4  { margin-top: 1rem; margin-bottom: 1rem; }
.my-5  { margin-top: 1.25rem; margin-bottom: 1.25rem; }
.mb-4  { margin-bottom: 1rem; }
.mr-2  { margin-right: 0.5rem; }
.mb-2  { margin-bottom: 0.5rem; }
.mb-1  { margin-bottom: 0.25rem; }
.mr-1  { margin-right: 0.25rem; }
.ml-0  { margin-left: 0px; }
.mr-3  { margin-right: 0.75rem; }
.mr-4  { margin-right: 1rem; }
.mb-3  { margin-bottom: 0.75rem; }
.mt-2  { margin-top: 0.5rem; }
.mb-5  { margin-bottom: 1.25rem; }
.inline-block  { display: inline-block; }
.flex  { display: flex; }
.grid  { display: grid; }
.hidden  { display: none; }
.h-screen  { height: 100vh; }
.h-full  { height: 100%; }
.h-3  { height: 0.75rem; }
.h-10  { height: 2.5rem; }
.w-full  { width: 100%; }
.w-screen  { width: 100vw; }
.w-1\/2  { width: 50%; }
.w-3  { width: 0.75rem; }
.max-w-4xl  { max-width: 56rem; }
.max-w-5xl  { max-width: 64rem; }
.max-w-sm  { max-width: 24rem; }
.flex-auto  { flex: 1 1 auto; }
.flex-initial  { flex: 0 1 auto; }
.flex-1  { flex: 1 1 0%; }
.transform-gpu  { --tw-transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
.cursor-pointer  { cursor: pointer; }
.select-none  { -webkit-user-select: none; -moz-user-select: none; user-select: none; }
.grid-flow-row  { grid-auto-flow: row; }
.grid-cols-1  { grid-template-columns: repeat(1, minmax(0, 1fr)); }
.flex-col  { flex-direction: column; }
.flex-wrap  { flex-wrap: wrap; }
.content-center  { align-content: center; }
.items-start  { align-items: flex-start; }
.items-center  { align-items: center; }
.justify-center  { justify-content: center; }
.justify-between  { justify-content: space-between; }
.justify-around  { justify-content: space-around; }
.justify-evenly  { justify-content: space-evenly; }
.justify-items-stretch  { justify-items: stretch; }
.gap-4  { gap: 1rem; }
.gap-5  { gap: 1.25rem; }
.overflow-auto  { overflow: auto; }
.truncate  { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
.whitespace-pre  { white-space: pre; }
.rounded-md  { border-radius: 0.375rem; }
.rounded  { border-radius: 0.25rem; }
.rounded-full  { border-radius: 9999px; }
.rounded-b-md  { border-bottom-right-radius: 0.375rem; border-bottom-left-radius: 0.375rem; }
.border  { border-width: 1px; }
.border-t  { border-top-width: 1px; }
.border-gray-300  { --tw-border-opacity: 1; border-color: rgba(209, 213, 219, var(--tw-border-opacity)); }
.border-gray-200  { --tw-border-opacity: 1; border-color: rgba(229, 231, 235, var(--tw-border-opacity)); }
.bg-white  { --tw-bg-opacity: 1; background-color: rgba(255, 255, 255, var(--tw-bg-opacity)); }
.bg-gray-50  { --tw-bg-opacity: 1; background-color: rgba(249, 250, 251, var(--tw-bg-opacity)); }
.bg-gray-600  { --tw-bg-opacity: 1; background-color: rgba(75, 85, 99, var(--tw-bg-opacity)); }
.bg-gray-100  { --tw-bg-opacity: 1; background-color: rgba(243, 244, 246, var(--tw-bg-opacity)); }
.bg-gradient-to-r  { background-image: linear-gradient(to right, var(--tw-gradient-stops)); }
.from-white  { --tw-gradient-from: #fff; --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 255, 255, 0)); }
.via-white  { --tw-gradient-stops: var(--tw-gradient-from), #fff, var(--tw-gradient-to, rgba(255, 255, 255, 0)); }
.to-transparent  { --tw-gradient-to: transparent; }
.bg-cover  { background-size: cover; }
.bg-center  { background-position: center; }
.fill-current  { fill: currentColor; }
.p-3  { padding: 0.75rem; }
.px-5  { padding-left: 1.25rem; padding-right: 1.25rem; }
.py-10  { padding-top: 2.5rem; padding-bottom: 2.5rem; }
.px-4  { padding-left: 1rem; padding-right: 1rem; }
.py-1  { padding-top: 0.25rem; padding-bottom: 0.25rem; }
.px-1  { padding-left: 0.25rem; padding-right: 0.25rem; }
.px-2  { padding-left: 0.5rem; padding-right: 0.5rem; }
.px-8  { padding-left: 2rem; padding-right: 2rem; }
.py-8  { padding-top: 2rem; padding-bottom: 2rem; }
.px-6  { padding-left: 1.5rem; padding-right: 1.5rem; }
.py-3  { padding-top: 0.75rem; padding-bottom: 0.75rem; }
.py-5  { padding-top: 1.25rem; padding-bottom: 1.25rem; }
.pt-10  { padding-top: 2.5rem; }
.pb-5  { padding-bottom: 1.25rem; }
.pt-12  { padding-top: 3rem; }
.text-left  { text-align: left; }
.text-center  { text-align: center; }
.text-3xl  { font-size: 1.875rem; line-height: 2.25rem; }
.text-sm  { font-size: 0.875rem; line-height: 1.25rem; }
.text-xl  { font-size: 1.25rem; line-height: 1.75rem; }
.text-base  { font-size: 1rem; line-height: 1.5rem; }
.text-lg  { font-size: 1.125rem; line-height: 1.75rem; }
.text-6xl  { font-size: 3.75rem; line-height: 1; }
.text-2xl  { font-size: 1.5rem; line-height: 2rem; }
.font-semibold  { font-weight: 600; }
.font-bold  { font-weight: 700; }
.leading-10  { line-height: 2.5rem; }
.text-gray-600  { --tw-text-opacity: 1; color: rgba(75, 85, 99, var(--tw-text-opacity)); }
.text-blue-500  { --tw-text-opacity: 1; color: rgba(59, 130, 246, var(--tw-text-opacity)); }
.text-white  { --tw-text-opacity: 1; color: rgba(255, 255, 255, var(--tw-text-opacity)); }
.text-purple-900  { --tw-text-opacity: 1; color: rgba(76, 29, 149, var(--tw-text-opacity)); }
.text-gray-500  { --tw-text-opacity: 1; color: rgba(107, 114, 128, var(--tw-text-opacity)); }
.text-gray-800  { --tw-text-opacity: 1; color: rgba(31, 41, 55, var(--tw-text-opacity)); }
.opacity-0  { opacity: 0; }
.brightness-110  { --tw-brightness: brightness(1.1); filter: var(--tw-filter); }
.filter  { filter: var(--tw-filter); }
.transition-transform  { transition-property: transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-opacity  { transition-property: opacity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.delay-150  { transition-delay: 150ms; }
.duration-200  { transition-duration: 200ms; }
.ease-in-out  { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
.octicon  { display: inline-block; vertical-align: text-bottom; }
.slide-button-colors, .flickity-button  { --tw-border-opacity: 1; border-color: rgba(209, 213, 219, var(--tw-border-opacity)); --tw-bg-opacity: 1; background-color: rgba(243, 244, 246, var(--tw-bg-opacity)); fill: currentColor; --tw-text-opacity: 1; color: rgba(17, 24, 39, var(--tw-text-opacity)); transition-property: background-color, border-color, color, fill, stroke; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; transition-duration: 300ms; }
.slide-button-colors:hover, .flickity-button:hover  { --tw-bg-opacity: 1; background-color: rgba(229, 231, 235, var(--tw-bg-opacity)); }
@media (prefers-color-scheme: dark)  {
 .slide-button-colors, .flickity-button  { --tw-bg-opacity: 1; background-color: rgba(17, 24, 39, var(--tw-bg-opacity)); }
 .slide-button-colors, .flickity-button  { --tw-text-opacity: 1; color: rgba(255, 255, 255, var(--tw-text-opacity)); }
 .slide-button-colors:hover, .flickity-button:hover  { --tw-bg-opacity: 1; background-color: rgba(55, 65, 81, var(--tw-bg-opacity)); } }
.slide-button  { flex: 1 1 0%; overflow: hidden; border-right-width: 1px; text-align: center; }
.slide-button:first-child  { border-bottom-left-radius: 0.375rem; }
.slide-button:last-child  { border-bottom-right-radius: 0.375rem; border-right-width: 0px; }
h1, h2, h3, h4, h5  { font-family: Oxygen, sans-serif; }
/* @apply wasn't working, so I resorted to CSS for these properties */
.flickity-viewport {
  /* Fixes corner-clipping */
  border-radius: .375rem;
}
.flickity-prev-next-button {
  border-style: solid;
  border-width: 0px;
  top: 0;
  transform: unset;
}
.flickity-prev-next-button.previous{
  left: 0;
  border-bottom-width: 1px;
  border-right-width: 1px;
  border-radius: 0;
  border-top-left-radius: .375rem;
  border-bottom-right-radius: .375rem;
}
.flickity-prev-next-button.next{
  right: 0;
  border-radius: 0;
  border-bottom-width: 1px;
  border-left-width: 1px;
  border-top-right-radius: .375rem;
  border-bottom-left-radius: .375rem;
}
.carousel-cell::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  background-color: #F5F5F5;
}
.carousel-cell::-webkit-scrollbar {
  width: 5px;
  background-color: #F5F5F5;
}
.carousel-cell::-webkit-scrollbar-thumb {
  border-radius: 10px;
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3);
  background-color: #666666;
}
/* Can be changed to tailwind later if appropriate */
.my-name{
  font-family: Oxygen, sans-serif;
  animation-delay: 1s;
  animation-timing-function: ease-in-out;
  word-wrap: break-word;
}
.space{
  animation: dot-shrink .5s ease-in-out 1s reverse;
  animation-fill-mode: forwards;
  font-size: 0em;
}
.name-dot{
  animation: dot-shrink .5s ease-in-out 1s;
  animation-fill-mode: forwards;
}
.name-dot span{
  animation-delay: .5s;
  animation-timing-function: ease-in-out;
  animation-duration: 1s;
}
@keyframes dot-shrink{
  0%{
    width: inherit;
    opacity: 1;
    font-size: 1em;
  }
  100%{
    opacity: 0;
    font-size: 0em;
  }
}
/* Markdown syntax complies to raw elements w/ no classes */
.article h1  { font-size: 3rem; line-height: 1; }
.article h2  { font-size: 2.25rem; line-height: 2.5rem; }
.article h3  { font-size: 1.875rem; line-height: 2.25rem; }
.article h4  { font-size: 1.5rem; line-height: 2rem; }
.article h1, .article h2, .article h3, .article h4  { font-weight: 300; }
.article h1, .article h2, .article h3, .article h4, .article p, .article .highlight {
    margin-bottom: 16px;
    overflow-x: clip;
  }
.article p  { max-width: 36rem; font-size: 1.125rem; line-height: 1.75rem; line-height: 1.375; }
.article blockquote {
    color: #6a737d;
    border-left: 2px solid #959da5;
    padding-left: 16px;
    margin-bottom: 16px;
  }
.article ul, .article ol {
    padding-left: 32px;
    margin-bottom: 16px;
  }
.article li ul, .article li ol {
    padding-left: 16px;
    margin-bottom: 0px;
  }
.hover\:scale-\[1\.025\]:hover  { --tw-scale-x: 1.025; --tw-scale-y: 1.025; transform: var(--tw-transform); }
.hover\:text-gray-800:hover  { --tw-text-opacity: 1; color: rgba(31, 41, 55, var(--tw-text-opacity)); }
.group:hover .group-hover\:opacity-100  { opacity: 1; }
@media (prefers-color-scheme: dark)  {
 .dark\:bg-gray-800  { --tw-bg-opacity: 1; background-color: rgba(31, 41, 55, var(--tw-bg-opacity)); }
 .dark\:bg-gray-900  { --tw-bg-opacity: 1; background-color: rgba(17, 24, 39, var(--tw-bg-opacity)); }
 .dark\:bg-gray-200  { --tw-bg-opacity: 1; background-color: rgba(229, 231, 235, var(--tw-bg-opacity)); }
 .dark\:from-gray-900  { --tw-gradient-from: #111827; --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(17, 24, 39, 0)); }
 .dark\:via-gray-900  { --tw-gradient-stops: var(--tw-gradient-from), #111827, var(--tw-gradient-to, rgba(17, 24, 39, 0)); }
 .dark\:text-gray-200  { --tw-text-opacity: 1; color: rgba(229, 231, 235, var(--tw-text-opacity)); }
 .dark\:text-white  { --tw-text-opacity: 1; color: rgba(255, 255, 255, var(--tw-text-opacity)); }
 .dark\:text-purple-400  { --tw-text-opacity: 1; color: rgba(167, 139, 250, var(--tw-text-opacity)); }
 .dark\:text-black  { --tw-text-opacity: 1; color: rgba(0, 0, 0, var(--tw-text-opacity)); }
 .dark\:text-purple-300  { --tw-text-opacity: 1; color: rgba(196, 181, 253, var(--tw-text-opacity)); }
 .dark\:brightness-\[1\.5\]  { --tw-brightness: brightness(1.5); filter: var(--tw-filter); }
 .dark\:brightness-\[1\.8\]  { --tw-brightness: brightness(1.8); filter: var(--tw-filter); } }
@media (min-width: 640px)  {
 .sm\:sticky  { position: sticky; }
 .sm\:w-2\/3  { width: 66.666667%; }
 .sm\:grid-cols-2  { grid-template-columns: repeat(2, minmax(0, 1fr)); }
 .sm\:grid-cols-\[repeat\(auto-fill\2c minmax\(300px\2c 1fr\)\)\]  { grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); }
 .sm\:flex-row  { flex-direction: row; } }
@media (min-width: 768px)  {
 .md\:max-w-\[450px\]  { max-width: 450px; }
 .md\:border-t-0  { border-top-width: 0px; }
 .md\:border-r  { border-right-width: 1px; }
 .md\:border-b-0  { border-bottom-width: 0px; } }
@media (min-width: 1280px)  {
 .xl\:max-w-xs  { max-width: 20rem; }
 .xl\:grid-cols-3  { grid-template-columns: repeat(3, minmax(0, 1fr)); } }
@media (min-width: 1920px)  {
 .\33xl\:mx-16  { margin-left: 4rem; margin-right: 4rem; }
 .\33xl\:max-w-none  { max-width: none; } }